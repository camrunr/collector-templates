{
  "type": "collection",
  "ttl": "4h",
  "ignoreGroupJobsLimit": false,
  "removeFields": [],
  "resumeOnBoot": false,
  "schedule": {
    "cronSchedule": " * * * * *",
    "maxConcurrentRuns": 1,
    "skippable": true,
    "run": {
      "rescheduleDroppedTasks": false,
      "maxTaskReschedule": 1,
      "logLevel": "debug",
      "jobTimeout": "2m",
      "mode": "run",
      "timeRangeType": "relative",
      "timeWarning": {},
      "expression": "true",
      "minTaskSize": "1MB",
      "maxTaskSize": "10MB",
      "stateTracking": {
        "stateUpdateExpression": "{\n      latestTime: _raw.httpMessage.start ?(((state.latestTime || 0) > _time)\n      ? state.latestTime \n      : Math.round(_raw.httpMessage.start))\n      :state.latestTime,\n      lag_status: ((Date.now() / 1000)-state.latestTime) >60?'lag':'ok',\n      total: total ? total : '',\n      id:__collectible.id?__collectible.id:''\n}",
        "stateMergeExpression": "(prevState.latestTime || 0) > newState.latestTime ? prevState : newState",
        "enabled": true
      },
      "discoverToRoutes": false,
      "timestampTimezone": "UTC"
    },
    "resumeMissed": false,
    "enabled": true
  },
  "streamtags": [],
  "workerAffinity": false,
  "collector": {
    "conf": {
      "discovery": {
        "discoverType": "list",
        "itemList": [
          "0",
          "15",
          "30",
          "45"
        ]
      },
      "collectMethod": "get",
      "pagination": {
        "type": "none"
      },
      "authentication": "hmac",
      "timeout": 0,
      "useRoundRobinDns": false,
      "disableTimeFilter": true,
      "decodeUrl": false,
      "rejectUnauthorized": true,
      "captureHeaders": false,
      "safeHeaders": [],
      "retryRules": {
        "type": "backoff",
        "interval": 1000,
        "limit": 5,
        "multiplier": 2,
        "maxIntervalMs": 20000,
        "codes": [
          429,
          503
        ],
        "enableHeader": true,
        "retryConnectTimeout": false,
        "retryConnectReset": false,
        "retryHeaderName": "retry-after"
      },
      "__scheduling": {
        "stateTracking": {}
      },
      "collectUrl": "`https://REPLACE URLHERE.akamaiapis.net/siem/v1/configs/IDNUMBERHERE`",
      "collectRequestParams": [
        {
          "value": "`${state.lag_status=='ok'&& Number(state.latestTime)? `${Number(state.latestTime)+1 + Math.round(Number(id))\n}`:(state.lag_status=='lag'?`${Math.round(Date.now() / 1000) - 65+Math.round(Number(id))}` : `${Math.round(Date.now() / 1000) - 65+Math.round(Number(id))}`)}`",
          "name": "from"
        },
        {
          "name": "limit",
          "value": "'120000'"
        },
        {
          "name": "to",
          "value": "`${state.lag_status=='ok'&& Number(state.latestTime) && id=='45'? `${Math.round(Date.now() / 1000) - 65+15+Math.round(Number(id))}`:(state.lag_status=='ok'&& Number(state.latestTime)? `${state.latestTime+Math.round(Number(id))+15}`:(state.lag_status=='lag'?`${Math.round(Date.now() / 1000) - 65+15+Math.round(Number(id))}` :\n `${Math.round(Date.now() / 1000) - 65+15+Math.round(Number(id))}`))}`\n"
        }
      ],
      "hmacFunctionId": "ddos_akamai_edgegrid",
      "collectRequestHeaders": []
    },
    "destructive": false,
    "encoding": "utf8",
    "type": "rest"
  },
  "input": {
    "type": "collection",
    "staleChannelFlushMs": 10000,
    "sendToRoutes": true,
    "preprocess": {
      "disabled": true
    },
    "throttleRatePerSec": "0",
    "breakerRulesets": [
      "Akamai SIEM Integration"
    ],
    "pipeline": "parse_akamai_siem",
    "output": "devnull",
    "metadata": [
      {
        "name": "id",
        "value": "`${__collectible.id}`"
      }
    ]
  },
  "id": "ddos_akamai_multithread_60s_4jobs"
}
